@page "/Empsalaryy"

@using DB

@inject ILoansDataService LoansDataService
@inject IDataService DataService
@inject IDiscountDataService DiscountDataService
@inject IIncentivesDataService IncentiveDataService
@inject IAttendingDataService AttendingDataService
@inject ILeavingDataService LeavingDataService
@inject IAllEmpSalary AllEmpSalaryService



@if (datas == null)
{


    <p><em>Loading...</em></p>
}
else
{

    <div class="container" align="center" dir="rtl" style="color: wheat;">
        <div class="row">
            <div class="col">
                <div class="mb-3">
                    <label>اسم الموظف</label>
                    <select @bind="@Nameselected">

                        <option selected disabled >ChooseEmployee</option>
                        @foreach (var item in datas)
                        {
                            <option>@item.empname</option>
                        }

                    </select>
                </div>
                <div class="mb-3">
                    <button class="btn btn-success" @onclick="calc">بحث</button>
                    <button class="btn btn-info"@onclick="save">تسجيل</button>

                </div>
                <div class="mb-3">
                    <span>@msg</span>
                </div>
            </div>
        </div>
    </div>



    <div class="container" dir="rtl">
       

                <div class="row">
                    <div class="col">
                        <div class="mb-3">
                            <label>المرتب</label>
                            <input type="number" disabled value="@SalaryVal" />
                        </div>

                        <div class="mb-3">
                            <label>صافي الايام</label>
                            <input type="text" disabled value="@val"  />
                            
                        </div>
                        <div class="mb-3">
                            <label>صافي المرتب</label>
                            <input type="text" disabled value="@valsal"/>
                            
                        </div>
                        <div class="mb-3" dir="rtl">
                            <label>عدد ايام الحضور : @DayCount</label>
                        </div>
                       
                    </div>

                    <div class="col">
                       
                                <div class="mb-3">
                                    <label>مكافأات</label>
                                    <input type="number" disabled value="@IncentiveVal" />
                                </div>
                          
                       
                                <div class="mb-3">
                                    <label>خصومات</label>
                                    <input type="number" disabled  value="@Disc" />
                                </div>


                       
                        
                                <div class="mb-3">
                                    <label>سلف</label>
                                    <input type="number" disabled value="@LoanVal"  />
                                </div>
                         

                       


                    </div>

                </div>
         

    </div>




@code {
    private string msg { get; set; }
    private DateTime date = DateTime.Now;

    private int DayCount { get; set; }
    private DateTime Attend { get; set; }
    private DateTime Leave { get; set; }
    private double   duration { get; set; }
    private double SalaryVal { get; set; }
    private double SalaryValMonthly { get; set; }
    private int Disc { get; set; }
    private int IncentiveVal { get; set; }
    private int LoanVal { get; set; }
    private double val { get; set; }
    private double valsal { get; set; }

    private string Nameselected { get; set; }
    private double DayCalc { get; set; }
    public List<DateListCalc> DateList = new List<DateListCalc>();
    public List<DateListLeaveCalc> DateListLeave = new List<DateListLeaveCalc>();
    public allempsalary empsalary = new allempsalary();
    IEnumerable<allempsalary> Getempsalary;
    IEnumerable<Data> datas;
    IEnumerable<LoansData> Loansdatas;
    IEnumerable<IncentivesData> Incentivedat;
    IEnumerable<DiscountData> Discountdatt;
    IEnumerable<AttendingData> Attendingdatas;
    IEnumerable<LeavingData> Leavingdatas;

    protected override void OnInitialized()
    {

    }

    protected override async Task OnInitializedAsync()
    {

        Loansdatas = await LoansDataService.GetDataLoan();

        Discountdatt = await DiscountDataService.GetDataDiscount();
        Incentivedat = await IncentiveDataService.GetDataIncentive();
        datas = await DataService.GetData();
        Attendingdatas = await AttendingDataService.GetAttendingData();
        Leavingdatas = await LeavingDataService.GetLeavingData();
    }
    protected void calc()
    {
        msg = " ";
        DateList.Clear();
        DateListLeave.Clear();

        duration = 0;
        SalaryVal = 0;
        Disc = 0;
        IncentiveVal = 0;
        LoanVal = 0;
        val = 0;
        valsal = 0;
        foreach (var item in datas)
        {
            if(item.empname == Nameselected)
            {
                SalaryVal = int.Parse(item.empsalary);
            }
        }
        foreach(var item in Loansdatas)
        {
            if(item.empname == Nameselected)
            {
                LoanVal += int.Parse(item.loansval);

            }

        }
        foreach(var item in Incentivedat)
        {
            if(Nameselected == item.empname)
            {
                IncentiveVal += int.Parse(item.incentivesval);
            }

        }
        foreach(var item in Discountdatt)
        {

            if(item.empname == Nameselected)
            {
                Disc +=  int.Parse(item.discountval);
            }

        }
        foreach (var item in Attendingdatas)
        {
            if (item.empname == Nameselected)
            {
                if (item.AttendsDate.Month.ToString() == DateTime.Now.Month.ToString()) //If we are in the same month to calculate Day
                {
                    foreach(var lev in Leavingdatas)
                    {
                        if(lev.empname == Nameselected)
                        {
                            if (item.AttendsDate.Day.ToString() == lev.LeavesDate.Day.ToString())
                            {
                                DateList.Add(new DateListCalc
                                {
                                    date = item.AttendsDate
                                });
                            }
                        }
                    }



                }


            }
        }
        foreach(var item in Leavingdatas)
        {
            if(item.empname == Nameselected)
            {
                if(item.LeavesDate.Month.ToString() == DateTime.Now.Month.ToString()) //If we are in the same month to calculate Day
                {
                    foreach(var atend in Attendingdatas)
                    {
                        if(atend.empname == Nameselected)
                        {
                            if(item.LeavesDate.Day.ToString() == atend.AttendsDate.Day.ToString()) //Check if the day is the same day for attend and leaving in the same month to calculate
                            {
                                DateListLeave.Add(new DateListLeaveCalc
                                {
                                    date = item.LeavesDate
                                });
                            }
                        }
                    }

                }

            }
        }
        DayCount = DateList.Count();
        foreach(var (atend,leave) in DateListLeave.Zip(DateList) ) //looping all days together (attend,leave) to calculate salary
        {


            duration += atend.date.Subtract(leave.date).TotalMinutes;


        }




        DayCalc = SalaryVal / 26 / 8 / 60 * duration;


        val = DayCalc;
        valsal = DayCalc + IncentiveVal - Disc - LoanVal;

        //val = SalaryVal + IncentiveVal - LoanVal - Disc;



    }

    private void save()
    {

        int datyear = date.Year;
        int datmonth = date.Month;
        var firstDayOfMonth = new DateTime(datyear, datmonth, 1);
        var lastDayOfMonth = firstDayOfMonth.AddMonths(1).AddDays(-1);

        if (DateTime.Now.Day.ToString() == lastDayOfMonth.ToString().Split("/")[1]) //To Save the salary in table for every month
        {
            DateList.Clear();
            DateListLeave.Clear();

            duration = 0;
            Disc = 0;
            IncentiveVal = 0;
            LoanVal = 0;
            val = 0;
            valsal = 0;
            foreach (var item in datas)
            {

                foreach (var itemLoan in Loansdatas)
                {
                    if (item.empname == itemLoan.empname)
                    {
                        LoanVal += int.Parse(itemLoan.loansval);

                    }

                }
                foreach (var itemIncen in Incentivedat)
                {
                    if (item.empname == itemIncen.empname)
                    {
                        IncentiveVal += int.Parse(itemIncen.incentivesval);
                    }

                }
                foreach (var itemDisc in Discountdatt)
                {

                    if (item.empname == itemDisc.empname)
                    {
                        Disc += int.Parse(itemDisc.discountval);
                    }

                }
                foreach (var itemAttend in Attendingdatas)
                {
                    if (item.empname == itemAttend.empname)
                    {
                        if (itemAttend.AttendsDate.Month.ToString() == DateTime.Now.Month.ToString()) //If we are in the same month to calculate Day
                        {
                            foreach (var lev in Leavingdatas)
                            {
                                if (lev.empname == item.empname)
                                {
                                    if (itemAttend.AttendsDate.Day.ToString() == lev.LeavesDate.Day.ToString())
                                    {
                                        DateList.Add(new DateListCalc
                                        {
                                            date = itemAttend.AttendsDate
                                        });
                                    }
                                }
                            }

                        }


                    }
                }
                foreach (var itemLeave in Leavingdatas)
                {
                    if (item.empname == itemLeave.empname)
                    {
                        if (itemLeave.LeavesDate.Month.ToString() == DateTime.Now.Month.ToString()) //If we are in the same month to calculate Day
                        {
                            foreach (var atend in Attendingdatas)
                            {
                                if (atend.empname == item.empname)
                                {
                                    if (itemLeave.LeavesDate.Day.ToString() == atend.AttendsDate.Day.ToString()) //Check if the day is the same day for attend and leaving in the same month to calculate
                                    {
                                        DateListLeave.Add(new DateListLeaveCalc
                                        {
                                            date = itemLeave.LeavesDate
                                        });
                                    }
                                }
                            }

                        }

                    }
                }

                DayCount = DateList.Count();
                foreach (var (atend, leave) in DateListLeave.Zip(DateList)) //looping all days together (attend,leave) to calculate salary
                {


                    duration += atend.date.Subtract(leave.date).TotalMinutes;


                }
                DayCount = DateList.Count();
                foreach (var (atend, leave) in DateListLeave.Zip(DateList)) //looping all days together (attend,leave) to calculate salary
                {


                    duration += atend.date.Subtract(leave.date).TotalMinutes;


                }




                DayCalc = double.Parse(item.empsalary) / 26.0 / 8.0 / 60.0 * (duration/2.0);


                val = DayCalc;
                double n = 10000 / 26 / 8 / 60;
                valsal = DayCalc + IncentiveVal - Disc - LoanVal;

                //val = SalaryVal + IncentiveVal - LoanVal - Disc;
                empsalary.empname = item.empname;
                empsalary.salary1 = val.ToString();
                empsalary.salary2 = valsal.ToString();
                empsalary.date = date.ToShortDateString();
                AllEmpSalaryService.CreateData(empsalary);


            }


        }
        else
        {

            msg = "wait for last day in the month";
        }
    }
    }




}
